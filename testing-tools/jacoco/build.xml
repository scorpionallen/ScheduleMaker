<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:jacoco="antlib:org.jacoco.ant" name="Testing coverage using JaCoCo" default="jacoco-rebuild">
  <description>Creates a coverage report of the result of testing the ScheduleMaker application (or selected parts) using JaCoCo.</description>
  
  <property name="jacoco.exec.file" location="jacoco.exec"/>
  <property name="lib.dir" location="./lib"/>
  <property name="project.bin.dir" location="${project.dir}/bin"/>
  <property name="project.src.dir" location="${project.dir}/src"/>
  <property name="report.dir" location="./coveragereport"/>
  <property name="result.dir" location="./temp"/>
  <property name="result.classes.dir" location="${result.dir}/classes"/>
  <property name="result.classes.instr.dir" location="${result.dir}/classes-instr"/>
  
  <target name="jacoco-clean">
    <delete dir="${result.dir}"/>
    <delete dir="${report.dir}"/>
    <delete file="${jacoco.exec.file}"/>
  </target>
  
  <target name="jacoco-rebuild" depends="jacoco-clean,jacoco-compile,jacoco-instrument,jacoco-test,jacoco-report"/>
  
  <target name="jacoco-compile">
    <fail message="Missing required property project.dir!">
      <condition>
        <not>
      	  <isset property="project.dir"/>
        </not>
      </condition>
    </fail>
    <mkdir dir="${result.classes.dir}"/>
    <javac srcdir="${project.src.dir}" destdir="${result.classes.dir}" debug="true" includeantruntime="false">
      <classpath>
        <pathelement path="${lib.dir}/junit-4.11.jar"/>
        <pathelement path="${lib.dir}/hamcrest-core-1.3.jar"/>
      </classpath>
    </javac>
  </target>
  
  <!--  Step 1: Import JaCoCo Ant tasks  -->
  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
    <classpath path="${lib.dir}/jacocoant.jar"/>
  </taskdef>
  
  <!--  Step 2: Instrument class files  -->
  <target name="jacoco-instrument" depends="jacoco-compile">
    <jacoco:instrument destdir="${result.classes.instr.dir}">
      <fileset dir="${result.classes.dir}"/>
    </jacoco:instrument>
  </target>
  
  <!--  Step 3: Run tests with instrumented classes  -->
  <target name="jacoco-test" depends="jacoco-instrument">
    <fail message="Missing required property driver.class!">
      <condition>
        <not>
      	  <isset property="driver.class"/>
        </not>
      </condition>
    </fail>
    <java classname="org.junit.runner.JUnitCore" fork="true">
      <!--  jacocoagent.jar must be on the classpath  -->
      <classpath>
        <pathelement path="${lib.dir}/junit-4.11.jar"/>
        <pathelement path="${lib.dir}/hamcrest-core-1.3.jar"/>
        <pathelement path="${lib.dir}/jacocoagent.jar"/>
        <pathelement path="${result.classes.instr.dir}"/>
      </classpath>
      <!--  Agent is configured with system properties  -->
      <sysproperty key="jacoco-agent.destfile" file="${jacoco.exec.file}"/>
      <sysproperty key="jacoco-agent.append" value="false"/>
      <arg value="${driver.class}"/>
    </java>
  </target>
  
  <!--  Step 4: Create coverage report  -->
  <target name="jacoco-report" depends="jacoco-test">
    <fail message="Missing required property project.dir!">
      <condition>
        <not>
      	  <isset property="project.dir"/>
        </not>
      </condition>
    </fail>
    <jacoco:report>
      <!-- This task needs the collected execution data and ... -->
      <executiondata>
        <file file="${jacoco.exec.file}"/>
      </executiondata>
      <!--  the class files and optional source files ...  -->
      <structure name="${report.title}">
        <classfiles>
          <fileset dir="${result.classes.dir}"/>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="${project.src.dir}"/>
        </sourcefiles>
      </structure>
      <!--  to produce reports in different formats.  -->
      <html destdir="${report.dir}"/>
      <!--
      <csv destfile="${report.dir}/report.csv"/>
      <xml destfile="${report.dir}/report.xml"/>
      -->
    </jacoco:report>
  </target>
  
  <target name="jacoco-rebuild-web" depends="jacoco-clean,jacoco-compile-web,jacoco-instrument-web"/>
  
  <target name="jacoco-compile-web">
    <fail message="Missing required property project.dir!">
      <condition>
        <not>
      	  <isset property="project.dir"/>
        </not>
      </condition>
    </fail>
    <mkdir dir="${result.classes.dir}"/>
    <javac srcdir="${project.src.dir}" destdir="${result.classes.dir}" debug="true" includeantruntime="false"/>
  </target>
  
  <target name="jacoco-instrument-web">
    <fail message="Missing required property tomcat.home!">
      <condition>
        <not>
      	  <isset property="tomcat.home"/>
        </not>
      </condition>
    </fail>
    <fail message="Missing required property project.dir!">
      <condition>
        <not>
      	  <isset property="project.dir"/>
        </not>
      </condition>
    </fail>
    <copy file="${lib.dir}/jacocoagent.jar" todir="${tomcat.home}/lib"/>
    <jacoco:instrument destdir="${instrumented.classes.dest.dir}">
      <fileset dir="${result.classes.dir}"/>
    </jacoco:instrument>
    <propertyfile file="${tomcat.home}/lib/jacoco-agent.properties">
      <entry key="destfile" value="${jacoco.exec.file}"/>
      <entry key="append" value="false"/>
    </propertyfile>
  </target>
  
  <target name="jacoco-report-web">
    <fail message="Missing required property project.dir!">
      <condition>
        <not>
      	  <isset property="project.dir"/>
        </not>
      </condition>
    </fail>
    <jacoco:report>
      <!-- This task needs the collected execution data and ... -->
      <executiondata>
        <file file="${jacoco.exec.file}"/>
      </executiondata>
      <!--  the class files and optional source files ...  -->
      <structure name="${report.title}">
        <classfiles>
          <fileset dir="${result.classes.dir}"/>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="${project.src.dir}"/>
        </sourcefiles>
      </structure>
      <!--  to produce reports in different formats.  -->
      <html destdir="${report.dir}"/>
      <!--
      <csv destfile="${report.dir}/report.csv"/>
      <xml destfile="${report.dir}/report.xml"/>
      -->
    </jacoco:report>
  </target>
</project>